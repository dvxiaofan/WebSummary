{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/router.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","2","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","0","1","jsonpScriptSrc","setTimeout","onScriptComplete","type","target","event","onerror","onload","clearTimeout","chunk","errorType","realSrc","error","Error","request","undefined","appendChild","all","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","bind","slice","s","routes","/foo","then","assign","default","/bar.do","Router","_this","this","addEventListener","load","location","pathname","path","history","pushState","View","mount","body","global","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","result","done","toString","keys","key","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","stop","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","router","start"],"mappings":"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","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + {\"0\":\"ca762cedda7f1e3dc036\",\"1\":\"35179a8c54ac9236c962\"}[chunkId] + \".js\"\n \t}\n\n\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tfunction onScriptComplete(event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","// 将 async/await 转换成 es5 代码后需要这个运行时库来支持\nimport 'regenerator-runtime/runtime'\n\n\nconst routes = {\n  '/foo': () => import('./views/foo'),\n  '/bar.do': () => import('./views/bar.do')\n}\n\n// Router类, 用来控制页面根据当前URL切换\nclass Router {\n  start() {\n    // 点击浏览器后退/前进按钮时会触发window.onpopstate事件, 我们在这时切换到相应页面\n    // https://developer.mozilla.org/en-US/docs/Web/Events/popstate\n    window.addEventListener('popstate', () => {\n      this.load(location.pathname)\n    })\n\n    // 打开页面时加载当前页面\n    this.load(location.pathname)\n  }\n\n  // 前往path, 变更地址栏URL, 并加载相应页面\n  go(path) {\n    // 变更地址栏URL\n    history.pushState({}, '', path)\n    // 加载页面\n    this.load(path)\n  }\n\n  // 加载path路径的页面\n  async load(path) {\n    // 首页\n    if (path === '/') path = '/foo'\n    // 动态加载页面\n    const View = (await routes[path]()).default\n\n    // 创建页面实例\n    const view = new View()\n    // 调用页面方法, 把页面加载到document.body中\n    view.mount(document.body)\n  }\n}\n\n// 导出router实例\nexport default new Router()\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","// 引入router\nimport router from './router'\n\n// 启动router\nrouter.start()\n"],"sourceRoot":""}